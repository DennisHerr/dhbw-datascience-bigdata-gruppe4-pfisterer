<!DOCTYPE html>
<html>
  <head>
    <!--Import Google Icon Font-->
    <!--<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">-->
    <!--Import materialize.css-->
	<link type="text/css" rel="stylesheet" href="/css/materialize.min.css"  media="screen,projection"/>
	<title>maschine parts error detection</title>

    <!--Let browser know website is optimized for mobile-->
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  </head>

  <body>
    
    <a class="waves-effect waves-light btn" onclick="statisticsModal()">statistics</a>
    <div id="modalgetstatistics" class="modal modal-fixed-footer">
      <form action="#">
      <div id="modalgetstatisticscontent" class="modal-content">
        <h4>View Statisics</h4>
        
      
  <h6>Choose and a date..</h6>
        <input type="text" id="datepicker" class="datepicker">
<br />
        <h6>..and a shift</h6>
        <form action="#">
          <select id="shiftselect">
            <option selected="selected" value="1">Shift 1</option>
            <option value="2">Shift 2</option>
            <option value="3">Shift 3</option>
          </select>
  
      </div>
      <div class="modal-footer">
        <a href="#!" class="modal-close waves-effect waves-red btn-flat">Cancel</a>
        <a href="#!" onclick="getStatistics()" id="submitbuttonstatistics" name="action" class="modal-close waves-effect waves-green btn-flat">Submit</a>
  
      </div>
    </form>
    </div>

    <div id="modalshowstatistics" class="modal modal-fixed-footer">
		<div id="modalgetstatisticscontent" class="modal-content">
		  <div id="barchart_material" style="width: 900px; height: 500px;"></div>
	  </div>
      <div class="modal-footer">
        <a href="#!" class="modal-close waves-effect waves-red btn-flat">Close</a>
  
      </div>
    </div>

    <div id="maschinetablediv"></div>

  <!-- Modal Structure -->
  <div id="modalpusherror" class="modal modal-fixed-footer">
    <div id="modalpusherrorcontent" class="modal-content">

    </div>
    <div class="modal-footer">
      <a href="#!" onclick="pushError(false)" class="modal-close waves-effect waves-red btn-flat">Cancel</a>
      <a href="#!" disabled id="submitbutton" onclick="pushError(true)" class="modal-close waves-effect waves-green btn-flat">Submit</a>

    </div>
  </div>

    <!--JavaScript at end of body for optimized loading-->
	<script type="text/javascript" src="/js/materialize.min.js"></script>
	<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

    <script>

      var maschineArray = <%- machinesData %>;
			var errorArray = <%- failuresData %>;

// function for pushing Error to middleware
function pushErrorModal(id, maschineName, x, y) {
  
    console.log('ID: ' + id);
    console.log('Name: '+ maschineName);
    console.log('P('+x+','+y+')');
    localStorage.setItem('maschineid', id);
    localStorage.setItem('maschinename', maschineName);
    localStorage.setItem('x', x);
    localStorage.setItem('y', y);

    var elems = document.getElementById('modalpusherror');
    var instance = M.Modal.init(elems);
    
    var modal = document.getElementById('modalpusherrorcontent');
    var modalHTML = '<h4>Push a Error </h4>'
                  + '<h6>for ' + localStorage.getItem('maschinename') + ' at'
                  + ' P(' + localStorage.getItem('x') + ',' + localStorage.getItem('y') + ')</h6>'
                  + '<form action="#">'
                    +'<h6>Choose an errortype..</h6>';
    
    for (i=0; i < errorArray.length; i++) {
      modalHTML = modalHTML
                 + '<p>'
                  + '<label>'
                    + '<input type="radio" name="radiobutton" value="' + errorArray[i].id +'"/>'
                    + '<span>' 
                      + errorArray[i].name
                      + '<br />'
                      + 'description: ' + errorArray[i].description
                    + '</span>'
                 + '</label>'
                + '</p>';
    }
    modalHTML = modalHTML + '</form>';
    
setTimeout(()=> {

  var allRadios = document.getElementsByName('radiobutton');
    var booRadio;
    var x = 0;
    var _this = this;
    for(x = 0; x < allRadios.length; x++){

      console.log('hi');
      allRadios[x].setAttribute( 'onClick', 'javascript: (localStorage.setItem("errorId", '+errorArray[x].id+'), document.getElementById("submitbutton").removeAttribute("disabled"))');

}

});

    modal.innerHTML = modalHTML;
    instance.open();
    
}

function statisticsModal() {

  var elems = document.getElementById('datepicker');
  var datepicker = M.Datepicker.init(elems, {format: "yyyy-mm-dd"});

  var elems = document.getElementById('shiftselect');
  var select = M.FormSelect.init(elems);

  var elems = document.getElementById('modalgetstatistics');
  var instance = M.Modal.init(elems);
    
  var modal = document.getElementById('modalgetstatisticscontent');
  instance.open();
}

function getStatistics() {
   var shift = document.getElementById('shiftselect').value;
   var date = document.getElementById('datepicker').value;

   if (shift == '' || date == '') {
     alert('Enter Shift AND Date!')
   } else {

	var errorStatisticsArray = [];

   requestStatistic(shift, date);
 

   }
}

function pushError(bool) {
  document.getElementById("submitbutton").setAttribute('disabled', true)
  if (bool) {
  var pushMaschineID = parseInt(localStorage.getItem('maschineid'));
  var pushErrorX = parseInt(localStorage.getItem('x'));
  var pushErrorY = parseInt(localStorage.getItem('y'));
  var pushErrorId = parseInt(localStorage.getItem('errorId'));

  //send data via http post
  var request = new XMLHttpRequest();
				request.onload = function()
				{
					//handle server response here
				}

				request.open("POST", "", true);
				request.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
				request.send(JSON.stringify({ Id_Machine: pushMaschineID, Id_Failure: pushErrorId, Pos_X: pushErrorX, Pos_Y: pushErrorY }));


  //toaster notification
  var toastHTML = 'Error P('+ localStorage.getItem('x') + ',' + localStorage.getItem('y') + ') for ' + localStorage.getItem('maschinename') +' pushed.';
  M.toast({html: toastHTML});
  } else {
    null;
  }
}

//function for looping through Array of machines from Database
function loopMaschineArray(maschineArray) {
    for (var c = 0; c < maschineArray.length; c++) {
        var maschine = maschineArray[c];
        addMachineTable(maschine.id, maschine.name, maschine.max_x, maschine.max_y);
       console.log(maschineArray[c]);
    }
}

//function for generating HTML table
function addMachineTable(id, name, max_x, max_y) {
  var tablediv = document.getElementById('maschinetablediv');
  tablediv.innerHTML = tablediv.innerHTML + '<h5>' + name + '</h5>';;

  var table = document.createElement('TABLE');
  table.classList = 'highlight centered striped';
  table.border = '1';

  var tableBody = document.createElement('TBODY');
  var w = table.appendChild(tableBody);

  for (var i = 0; i < max_x; i++) {
    var tr = document.createElement('TR');
    var x = tableBody.appendChild(tr);

    for (var j = 0; j < max_y; j++) {
      var td = document.createElement('TD');
      td.width = '30';
      var xy = i + ',' + j;
      var params = id + ',' + "'" + name + "'" + ',' + xy;
      var y = td.appendChild(document.createTextNode('P('+xy+')'));
      y.parentElement.setAttribute( 'onClick', 'javascript: pushErrorModal('+params+');');
      var z = tr.appendChild(td);
    }
  }
  tablediv.appendChild(table);
  tablediv.innerHTML = tablediv.innerHTML + '<br />'
}

function requestStatistic(shift, date)
			{
				//send data via http post
				var request = new XMLHttpRequest();
				request.onload = function()
				{
		  console.log('request onload');
		  console.log(request.response);
					//handle server response here
					//TODO -> setup the chart 

		var errorStatisticsArray = [];
		Promise.all(errorStatisticsArray = JSON.parse(request.response)).then(data =>{
               return;		});

		if(errorStatisticsArray.length==0) {
			var bardiv = document.getElementById('barchart_material');
			bardiv.innerHTML = '<h4>No matching error entries found <br />for shift: ' + shift + ' on date: ' + String(date) + '</h4>'
								+ '<br />'
								+ '<h6>Start a new try:</h6>'
								+'<a href="#!" class="modal-close waves-effect waves-light btn" onclick="statisticsModal()">statistics</a>';
		}
		var chartArray = [['Errortype', 'Count']];

		for(i=0; i<errorStatisticsArray.length; i++) {
			chartArray.push(['' + errorStatisticsArray[i].id_failure, errorStatisticsArray[i].count])
		}      

		console.log(chartArray);


		google.charts.load('current', {'packages':['bar']});
			google.charts.setOnLoadCallback(drawChart);

			function drawChart() {
			var data = google.visualization.arrayToDataTable(chartArray);

			var options = {
				chart: {
				title:  'maschine part errors for shift: ' + shift + ' on date: ' + String(date),
				subtitle: 'grouped by error',
				},
				bars: 'horizontal' // Required for Material Bar Charts.
			};

			var chart = new google.charts.Bar(document.getElementById('barchart_material'));

			errorStatisticsArray.length !== 0 ? chart.draw(data, google.charts.Bar.convertOptions(options)) : null;
			}


		var elems = document.getElementById('modalshowstatistics');
		var instance = M.Modal.init(elems);
		instance.open();
				} 

				request.open("POST", "/Statistic/", false);
				request.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
				request.send(JSON.stringify({ Shift: shift, Date: date }));
				
			}

//entry point
loopMaschineArray(maschineArray);

    </script>
    <style>

/*Custom Table Styling*/
        body {
            padding: 20px;
        }
        table, th, td {
            border-style: solid;
        }
        td {
            cursor: pointer;
        }
        td:hover {
            background-color: red;
            color: white;
        }

/*Custom Button Styling*/
        .btn {
            background-color: grey !important;
        }

        .btn:hover {
            background-color: black;
        }
        .btn:active {
            background-color: black;
        }

/*Custom Modal Styling*/
/*datepicker im modal anzeigbar machen*/
.modal {
      height: 100%;
      overflow: hidden;
  }

/*Custom iframe Styling*/
iframe {
  position: absolute;
  height: 100%;
  width: 100%;
  border: none;
  overflow: auto !important;
}
    </style>
  </body>
</html>