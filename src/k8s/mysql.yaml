#Begin: Configmap
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-deployment-init-configmap
data:
  mysql-init.sql: |
    CREATE TABLE `Machines` (
      `Id` BIGINT NOT NULL,
      `Name`  VARCHAR(255),
      `Max_X` BIGINT NOT NULL,
      `Max_Y` BIGINT NOT NULL,
      PRIMARY KEY (`Id`)
    );

    CREATE TABLE `Failures` (
      `Id` BIGINT NOT NULL,
      `Name`  VARCHAR(255) NOT NULL,
      `Description`  VARCHAR(4095),
      PRIMARY KEY (`Id`)
    );

    CREATE TABLE `Fault_Parts` (
      `Id` BIGINT NOT NULL,
      `Id_Machine` BIGINT NOT NULL,
      `Id_Failure` BIGINT NOT NULL,
      `Pos_X` BIGINT NOT NULL,
      `Pos_Y` BIGINT NOT NULL,
      `Rated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
      PRIMARY KEY (`Id`)
    );

    CREATE TABLE `Shift_Statistics` (
      `Id_Failure` BIGINT NOT NULL,
      `Count` BIGINT NOT NULL,
      `Date` DATE,
      `Shift` BIGINT NOT NULL,
      PRIMARY KEY (`Id_Failure`, `Date`, `Shift`)
    );

    INSERT INTO Machines (Id, Name, Max_X, Max_Y) VALUES (1, 'Machine A', 5, 5);
    INSERT INTO Machines (Id, Name, Max_X, Max_Y) VALUES (2, 'Machine B', 6, 6);
    INSERT INTO Machines (Id, Name, Max_X, Max_Y) VALUES (3, 'Machine C', 7, 7);
    INSERT INTO Failures (Id, Name, Description) VALUES (4, 'Failure A', 'Hello Failure A');
    INSERT INTO Failures (Id, Name, Description) VALUES (5, 'Failure B', 'Hello Failure B');
    INSERT INTO Failures (Id, Name, Description) VALUES (6, 'Failure C', 'Hello Failure C');
    INSERT INTO Shift_Statistics (Id_Failure, Count, Shift, Date) VALUES (1, 30, 1, '2020-12-31');
    INSERT INTO Shift_Statistics (Id_Failure, Count, Shift, Date) VALUES (1, 22, 3, '2020-12-31');
    INSERT INTO Shift_Statistics (Id_Failure, Count, Shift, Date) VALUES (2, 32, 3, '2020-12-31');
    INSERT INTO Shift_Statistics (Id_Failure, Count, Shift, Date) VALUES (3, 22, 3, '2020-12-31');

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
  labels:
    app: my-mysql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-mysql
  template:
    metadata:
      labels:
        app: my-mysql
    spec:
      containers:
        - name: my-mysql
          image: mysql
          # Set required environment variables to initialize the container
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "mysecretpw"
            - name: MYSQL_DATABASE
              value: "popular"
          ports:
            - containerPort: 33060
          # Mount the volume
          # Mount configmap at expected location (excerpt)
          volumeMounts:
            - name: init-volume
              mountPath: /docker-entrypoint-initdb.d/
      volumes:
        - name: init-volume
          configMap:
            name: mysql-deployment-init-configmap

---
#Begin: Service
apiVersion: v1
kind: Service
metadata:
  name: my-app-mysql-service
spec:
  selector:
    app: my-mysql
  ports:
    - name: mysql-xproto
      protocol: TCP
      port: 33060
      targetPort: 33060
#End: Service
